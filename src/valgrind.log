==11117== Memcheck, a memory error detector
==11117== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==11117== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==11117== Command: ../bin/dorton
==11117== Parent PID: 11104
==11117== 
Error:
  unknown error code 14

Memcheck: the 'impossible' happened:
   unknown error code in mc_eq_Error

host stacktrace:
==11117==    at 0x58042CDA: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==11117==    by 0x58042E07: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==11117==    by 0x580430DF: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==11117==    by 0x58039828: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==11117==    by 0x5803E1B7: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==11117==    by 0x580390A4: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==11117==    by 0x5800595A: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==11117==    by 0x580A01EE: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==11117==    by 0x580E599D: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)

sched status:
  running_tid=1

Thread 1: status = VgTs_Runnable (lwpid 11117)
==11117==    at 0x484ABC0: realloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==11117==    by 0x17386D22: ??? (in /usr/lib/x86_64-linux-gnu/libnvidia-eglcore.so.470.239.06)
==11117==    by 0x1738BFCB: ??? (in /usr/lib/x86_64-linux-gnu/libnvidia-eglcore.so.470.239.06)
==11117==    by 0x1739CF38: ??? (in /usr/lib/x86_64-linux-gnu/libnvidia-eglcore.so.470.239.06)
==11117==    by 0x1739D314: ??? (in /usr/lib/x86_64-linux-gnu/libnvidia-eglcore.so.470.239.06)
==11117==    by 0x1739836E: NvGlEglApiInit (in /usr/lib/x86_64-linux-gnu/libnvidia-eglcore.so.470.239.06)
==11117==    by 0x162354B4: ??? (in /usr/lib/x86_64-linux-gnu/libEGL_nvidia.so.470.239.06)
==11117==    by 0x1623559A: ??? (in /usr/lib/x86_64-linux-gnu/libEGL_nvidia.so.470.239.06)
==11117==    by 0x162AD3D5: ??? (in /usr/lib/x86_64-linux-gnu/libEGL_nvidia.so.470.239.06)
==11117==    by 0x16233527: ??? (in /usr/lib/x86_64-linux-gnu/libEGL_nvidia.so.470.239.06)
==11117==    by 0x162486EC: ??? (in /usr/lib/x86_64-linux-gnu/libEGL_nvidia.so.470.239.06)
==11117==    by 0x61BB416: loadEGLExternalPlatform (in /usr/lib/x86_64-linux-gnu/libnvidia-egl-wayland.so.1.1.12)
==11117==    by 0x162AAC6A: ??? (in /usr/lib/x86_64-linux-gnu/libEGL_nvidia.so.470.239.06)
==11117==    by 0x162ABCBE: ??? (in /usr/lib/x86_64-linux-gnu/libEGL_nvidia.so.470.239.06)
==11117==    by 0x162A1D7B: ??? (in /usr/lib/x86_64-linux-gnu/libEGL_nvidia.so.470.239.06)
==11117==    by 0x490BD3E: __pthread_once_slow (pthread_once.c:116)
==11117==    by 0x162A1AD2: ??? (in /usr/lib/x86_64-linux-gnu/libEGL_nvidia.so.470.239.06)
==11117==    by 0x162A3794: ??? (in /usr/lib/x86_64-linux-gnu/libEGL_nvidia.so.470.239.06)
==11117==    by 0x16233512: ??? (in /usr/lib/x86_64-linux-gnu/libEGL_nvidia.so.470.239.06)
==11117==    by 0x1624DD6C: ??? (in /usr/lib/x86_64-linux-gnu/libEGL_nvidia.so.470.239.06)
==11117==    by 0x61A79D0: ??? (in /usr/lib/x86_64-linux-gnu/libEGL.so.1.1.0)
==11117==    by 0x61A8074: ??? (in /usr/lib/x86_64-linux-gnu/libEGL.so.1.1.0)
==11117==    by 0x490BD3E: __pthread_once_slow (pthread_once.c:116)
==11117==    by 0x61A653A: eglGetProcAddress (in /usr/lib/x86_64-linux-gnu/libEGL.so.1.1.0)
==11117==    by 0x5AA66E8: ??? (in /usr/lib/x86_64-linux-gnu/libGLX_nvidia.so.470.239.06)
==11117==    by 0x5AA5D4F: ??? (in /usr/lib/x86_64-linux-gnu/libGLX_nvidia.so.470.239.06)
==11117==    by 0x5AA65A9: vk_icdGetInstanceProcAddr (in /usr/lib/x86_64-linux-gnu/libGLX_nvidia.so.470.239.06)
==11117==    by 0x4A9357C: ??? (in /usr/lib/x86_64-linux-gnu/libvulkan.so.1.3.250)
==11117==    by 0x4AB985B: ??? (in /usr/lib/x86_64-linux-gnu/libvulkan.so.1.3.250)
==11117==    by 0x4AA266A: ??? (in /usr/lib/x86_64-linux-gnu/libvulkan.so.1.3.250)
==11117==    by 0x4AABC0C: vkEnumerateInstanceExtensionProperties (in /usr/lib/x86_64-linux-gnu/libvulkan.so.1.3.250)
==11117==    by 0x4CB09F9: ??? (in /usr/lib/x86_64-linux-gnu/libglfw.so.3.3)
==11117==    by 0x4CB4306: glfwGetRequiredInstanceExtensions (in /usr/lib/x86_64-linux-gnu/libglfw.so.3.3)
==11117==    by 0x485A31F: render_backend_create (render/render_backend/render_backend.c:30)
==11117==    by 0x485A508: renderer_create (render/render.c:10)
==11117==    by 0x485A77A: app_create (app/app.c:35)
==11117==    by 0x109196: main (main.c:7)
client stack range: [0x1FFEFEF000 0x1FFF000FFF] client SP: 0x1FFEFFC890
valgrind stack range: [0x1002CAA000 0x1002DA9FFF] top usage: 18312 of 1048576


Note: see also the FAQ in the source distribution.
It contains workarounds to several common problems.
In particular, if Valgrind aborted or crashed after
identifying problems in your program, there's a good chance
that fixing those problems will prevent Valgrind aborting or
crashing, especially if it happened in m_mallocfree.c.

If that doesn't help, please report this bug to: www.valgrind.org

In the bug report, send all the above text, the valgrind
version, and what OS and version you are using.  Thanks.

